# https://docs.docker.com/build/ci/github-actions/#step-three-define-the-workflow-steps

# workflow 이름
name: Docker hub image build
# workflow에서 작업이 실행되는 조건 (push, pull, ...)
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

#작업에 대한 정의
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      ### repository check
      -
        name: Checkout
        uses: actions/checkout@v3
      ### image tag number
      -
        name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      ### docker hub login 
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      ### setup docker buildx
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ### meta https://github.com/docker/metadata-action
      -
        name: Docker meta
        id: docker_meta
          #uses: crazy-max/ghaction-docker-meta@v1
        uses: docker/metadata-action@v4
        with:
          images: junisduck/image_test
          tags: |
            ${{ github.repository_owner }}:${{ env.RELEASE_VERSION }}
            #type=semver,pattern={{major}}.{{minor}}
            #ghcr.io/${{ github.repository_owner }}/my-container-test:latest
            #ghcr.io/${{ github.repository_owner }}/my-container-test:${{ env.RELEASE_VERSION }}
      ### build and push docker image
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          files: |
            ./Dockerfile
            ${{ steps.meta.outputs.bake-file }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      ### slack notification
      -
        name: Slack Notification Demo
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ job.status }}
          author_name: dev(?)
          fields: repo,commit,message,author
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
